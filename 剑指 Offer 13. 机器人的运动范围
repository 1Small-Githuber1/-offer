一、问题描述：剑指 Offer 13. 机器人的运动范围

地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。
例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？

示例 1：
输入：m = 2, n = 3, k = 1
输出：3

示例 2：
输入：m = 3, n = 1, k = 0
输出：1

提示：1 <= n,m <= 100   0 <= k <= 20


二、思路分析
    刚拿到这道题，属实懵逼，但好像思路以前见过，原来是DFS，是因为带有返回状态，但是数据结构的DFS早就忘了怎么写了，还好这些可以条件要求不多，仔细想想也能做出来。
    需要注意的是：（1）终止条件有多个  4个
                 （2）节点运行方向只有两个，因为从[0,0]开始运动的


三、代码
class Solution {
    boolean[][] visit;
    public int movingCount(int m, int n, int k) {
        // 第一步：先明确递归参数
        // 第二步：明确递归终止条件
        visit = new boolean[m][n];
        return dfs(0,0,m,n,k);
    }

    private int dfs(int i,int j,int m,int n,int k) {
        //明确递归终止条件
        if((i%10 + i/10 + j%10 + j/10)>k || i >= m || j >= n || visit[i][j]) {
            return 0;
        }
        visit[i][j] = true;
        //节点只能向下和向右
        return 1 + dfs(i+1,j,m,n,k) + dfs(i,j+1,m,n,k);
    }
}


