一、问题描述：剑指 Offer 05. 替换空格

请实现一个函数，把字符串 s 中的每个空格替换成"%20"。

示例 1：
输入：s = "We are happy."
输出："We%20are%20happy."

限制：0 <= s 的长度 <= 10000


二、思路分析
（1）方法一：replace()方法，大家都知道的，不用细讲，但效率最低

（2）方法二：将字符串单个字符读出，并替换，其实就是将字符串转化为字符进行替换

（3）方法三：字符数组   效率最高
        由于每次替换从 1 个字符变成 3 个字符，使用字符数组可方便地进行替换。建立字符数组地长度为 s 的长度的 3 倍，这样可保证字符数组可以容纳所有替换后的字符。
        获得 s 的长度 length
        创建字符数组 array，其长度为 length * 3
            初始化 size 为 0，size 表示替换后的字符串的长度
        从左到右遍历字符串 s
        获得 s 的当前字符 c
            如果字符 c 是空格，则令 array[size] = '%'，array[size + 1] = '2'，array[size + 2] = '0'，并将 size 的值加 3
            如果字符 c 不是空格，则令 array[size] = c，并将 size 的值加 1
        遍历结束之后，size 的值等于替换后的字符串的长度，从 array 的前 size 个字符创建新字符串，并返回新字符串


三、代码

class Solution {
    public String replaceSpace(String s) {
        //方法一：replace，简称面试官不开心的方法
        //return s.replace(" ","%20");

        //方法二：将字符串单个字符读出
        /*
        StringBuilder sb = new StringBuilder();
        for(int i = 0;i<s.length();i++) {
            char ch = s.charAt(i);
            if(ch == ' ') sb.append("%20");
            else sb.append(ch);
        }
        return sb.toString();
        */

        //方法三：字符数组   效率最高
        /*由于每次替换从 1 个字符变成 3 个字符，使用字符数组可方便地进行替换。建立字符数组地长度为 s 的长度的 3 倍，这样可保证字符数组可以容纳所有替换后的字符。
        获得 s 的长度 length
        创建字符数组 array，其长度为 length * 3
        初始化 size 为 0，size 表示替换后的字符串的长度
        从左到右遍历字符串 s
        获得 s 的当前字符 c
        如果字符 c 是空格，则令 array[size] = '%'，array[size + 1] = '2'，array[size + 2] = '0'，并将 size 的值加 3
        如果字符 c 不是空格，则令 array[size] = c，并将 size 的值加 1
        遍历结束之后，size 的值等于替换后的字符串的长度，从 array 的前 size 个字符创建新字符串，并返回新字符串
        */

        int length = s.length();
        char[] array = new char[length * 3];
        int size = 0;
        for(int i = 0;i<length;i++) {
            if(s.charAt(i) == ' ') {
                array[size++] = '%';
                array[size++] = '2';
                array[size++] = '0';
            } else {
                array[size++] = s.charAt(i);
            }
        }
        String newStr = new String(array,0,size);
        return newStr;
       
    }
}
